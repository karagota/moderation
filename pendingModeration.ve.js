(function() {
    console.log('‚úÖ pendingModeration.ve.js start');

    // –û–∂–∏–¥–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ VE
    const initInterval = setInterval(() => {
        if (window.ve && ve.ui && ve.ui.MWMediaDialog) {
            clearInterval(initInterval);
            applyPatches();
        }
    }, 100);

    function applyPatches() {
        console.log('‚úÖ VE is ready, applying custom patches');

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
        const origSetup = ve.ui.MWMediaDialog.prototype.getSetupProcess;

        // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        ve.ui.MWMediaDialog.prototype.getSetupProcess = function(data) {
            return origSetup.call(this, data)
                .next(() => {
                    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                    if (this.mediaUploadBooklet) {
                        console.log('‚úÖ Attaching upload event handlers');

                        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ upload
                        const origCreateUpload = this.mediaUploadBooklet.createUpload;

                        this.mediaUploadBooklet.createUpload = function() {
                            const upload = origCreateUpload.call(this);
                            const booklet = this; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç BookletLayout

                            // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ finishStashUpload
                            const origFinishStashUpload = upload.finishStashUpload;

                            upload.finishStashUpload = function(filekey, filename) {
                                return origFinishStashUpload.call(this, filekey, filename)
                                    .then(response => {
                                        console.log('‚öôÔ∏è Upload finished', response);

                                        // –ï—Å–ª–∏ —Ñ–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é
                                        if (response.upload && response.moderation === 'pending') {
                                            // –ò—Å–ø–æ–ª—å–∑—É–µ–º booklet.emit –≤–º–µ—Å—Ç–æ this.emit
                                            booklet.emit('uploadModerated', response);
                                        }
                                        return response;
                                    })
                                    .catch(error => {
                                        console.log('‚öôÔ∏è Upload error', error);

                                        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
                                        if (error === 'moderation-image-queued') {
                                            // –ò—Å–ø–æ–ª—å–∑—É–µ–º booklet.emit –≤–º–µ—Å—Ç–æ this.emit
                                            console.log(booklet.upload);
                                            booklet.emit('uploadModerated', {
                                                error: true,
                                                result: {
                                                    filename: booklet.upload.filename,
                                                    filekey: booklet.upload.stateDetails.errors[0].data.filekey || booklet.upload.stateDetails.errors[0].data.sessionkey
                                                }
                                            });
                                        }
                                        return Promise.reject(error);
                                    });
                            }.bind(upload);

                            return upload;
                        }.bind(this.mediaUploadBooklet);

                        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
                        this.mediaUploadBooklet.on('uploadModerated', (response) => {
                            console.log('üîÑ Upload moderated', response);

                            let data = {};

                            if (response.error) {
                                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
                                const errorData = response.result;
                                data = {
                                    fileName: errorData.filename,
                                    moderationTempUrl: 'https://wiki.test/images/thumb/0/00/%d0%af%d1%81%d1%84%d0%b2%d0%b0%d0%b2%d0%b0%d1%83%d1%86%d0%b0%d0%b9%d1%83.jpg/120px-%d0%af%d1%81%d1%84%d0%b2%d0%b0%d0%b2%d0%b0%d1%83%d1%86%d0%b0%d0%b9%d1%83.jpg' //+ errorData.filekey
                                };
                            } else {
                                // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
                                data = {
                                    fileName: response.upload.filename,
                                    moderationTempUrl: response.moderationTempUrl
                                };
                            }

                            this.showPendingUpload(data);
                        });
                    }
                });
        };

        // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        ve.ui.MWMediaDialog.prototype.showPendingUpload = function(data) {
            console.log('üîÑ Showing pending upload interface', data);

            console.log(this);

            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            this.switchPanels('imageInfo');

            // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            this.$infoPanelWrapper.empty();

            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            const $container = $('<div>').addClass('moderation-pending-container');

            // –ü—Ä–µ–≤—å—é —Ñ–∞–π–ª–∞
            if (data.moderationTempUrl) {
                $container.append(
                    $('<div>')
                        .css({textAlign: 'center', margin: '1em 0'})
                        .append(
                            $('<img>')
                                .attr('src', data.moderationTempUrl)
                                .css({maxWidth: '100%', maxHeight: '150px'})
                        )
                );
            }

            // –°–æ–æ–±—â–µ–Ω–∏–µ
            $container.append(
                $('<div>')
                    .addClass('moderation-pending-message')
                    .text('–í–∞—à —Ñ–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é')
            );

            // –ö–Ω–æ–ø–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –∏–º—è —Ñ–∞–π–ª–∞)
            if (data.fileName) {
                $container.append(
                    $('<button>')
                        .addClass('oo-ui-buttonElement-button oo-ui-buttonElement-button-primary')
                        .text('–í—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É')
                        .on('click', () => {
                            const surface = this.getFragment().getSurface();
                            surface.execute('insertContent', `[[File:${data.fileName}]]`);
                            this.close();
                        })
                );
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            this.$infoPanelWrapper.append($container);

            // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            this.title.setLabel('–§–∞–π–ª –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏');
        };
    }
})();